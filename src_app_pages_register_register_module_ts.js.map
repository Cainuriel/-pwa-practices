{"version":3,"sources":["./src/app/pages/register/register-routing.module.ts","./src/app/pages/register/register.module.ts","./src/app/pages/register/register.page.ts","./src/app/pages/register/register.page.scss","./src/app/pages/register/register.page.html"],"names":[],"mappings":"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","file":"src_app_pages_register_register_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { UsersService } from '../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  usuario = this.fb.group({\r\n    name: ['',Validators.required],\r\n    secondName: ['',Validators.required],\r\n    email: ['', [Validators.email,Validators.required]],\r\n    password: ['', [Validators.required, Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],//this is for the letters (both uppercase and lowercase) and numbers validation\r\n    confirmPassword: ['', Validators.required],\r\n    phone: ['',[Validators.required]],\r\n    birth: ['',[Validators.required]],\r\n    img: '../../../assets/img/userDefault.png',\r\n  });  // todo no funciona la validacion del movil: Validators.pattern('[6789][0-9]{9}')\r\n  // flags \r\nhiddenPassword: boolean = true;\r\npasswordNotMatch: boolean = true;\r\n\r\nconstructor(private fb: FormBuilder,\r\n        private userService: UsersService) { }\r\n\r\nngOnInit() {\r\n}\r\n\r\nseePassword(){\r\nthis.hiddenPassword = !this.hiddenPassword;\r\n}\r\n\r\nguardarDatos() {\r\n\r\nconsole.log(this.usuario.value);\r\nthis.userService.saveUser(this.usuario.value);\r\n\r\n}\r\n\r\npasswordMatch() {\r\nlet password  = this.usuario.controls.password.value;\r\nlet confirmPassword  = this.usuario.controls.confirmPassword.value;\r\nconsole.log('el password ',password);\r\nconsole.log('confirm password ',confirmPassword);\r\nif(password === confirmPassword) {\r\n this.passwordNotMatch =  true;\r\n} else {\r\nthis.passwordNotMatch =  false;\r\n}\r\n\r\n}\r\n\r\n}\r\n","export default \".center-class {\\n  margin: 26px auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0FBQ0oiLCJmaWxlIjoicmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNlbnRlci1jbGFzcyB7XHJcbiAgICBtYXJnaW46IDI2cHggYXV0bztcclxufVxyXG5cclxuIl19 */\";","export default \"<app-header></app-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <h1 class=\\\"ion-text-center\\\">Register</h1>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <form\\r\\n        [formGroup]=\\\"usuario\\\"\\r\\n        (ngSubmit)=\\\"guardarDatos()\\\"\\r\\n        class=\\\"ion-padding\\\"\\r\\n      >\\r\\n        <ion-item>\\r\\n          <ion-label>Name:</ion-label>\\r\\n          <ion-input formControlName=\\\"name\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <!-- <ion-label color=\\\"danger\\\" *ngIf=\\\"usuario.controls.nombre.errors?.required && (usuario.touched || usuario.dirty)\\\">* Required </ion-label> -->\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Second Name:</ion-label>\\r\\n          <ion-input formControlName=\\\"secondName\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <!-- <ion-label color=\\\"danger\\\" *ngIf=\\\"usuario.controls.apellido.errors?.required && (usuario.touched || usuario.dirty)\\\">* Required </ion-label> -->\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Email:</ion-label>\\r\\n          <ion-input formControlName=\\\"email\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <!-- <ion-label color=\\\"danger\\\" *ngIf=\\\"usuario.controls.email.errors?.required && (usuario.touched || usuario.dirty)\\\">* Required </ion-label> -->\\r\\n        <ion-label\\r\\n          color=\\\"danger\\\"\\r\\n          *ngIf=\\\"usuario.controls.email.errors?.email && (usuario.touched || usuario.dirty)\\\"\\r\\n          >* No valid email</ion-label\\r\\n        >\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Password:</ion-label>\\r\\n          <ion-input\\r\\n            (change)=\\\"passwordMatch()\\\"\\r\\n            formControlName=\\\"password\\\"\\r\\n            [type]=\\\"hiddenPassword ? 'password' : 'text'\\\"\\r\\n          ></ion-input>\\r\\n          <ion-icon\\r\\n            (click)=\\\"seePassword()\\\"\\r\\n            slot=\\\"end\\\"\\r\\n            [name]=\\\"hiddenPassword ? 'eye-off' : 'eye'\\\"\\r\\n          ></ion-icon>\\r\\n        </ion-item>\\r\\n        <!-- <ion-label color=\\\"danger\\\" *ngIf=\\\"usuario.controls.password.errors?.required && (usuario.touched || usuario.dirty)\\\">* Required </ion-label> -->\\r\\n        <ion-label\\r\\n          color=\\\"danger\\\"\\r\\n          *ngIf=\\\"usuario.controls.password.errors?.pattern && (usuario.touched || usuario.dirty)\\\"\\r\\n          >* numbers and capital letters</ion-label\\r\\n        >\\r\\n\\r\\n        <ion-item>\\r\\n          <label>Confirm Password: </label>\\r\\n          <ion-input\\r\\n            (change)=\\\"passwordMatch()\\\"\\r\\n            formControlName=\\\"confirmPassword\\\"\\r\\n            [type]=\\\"hiddenPassword ? 'password' : 'text'\\\"\\r\\n          >\\r\\n          </ion-input>\\r\\n        </ion-item>\\r\\n        <!-- <ion-label color=\\\"danger\\\" *ngIf=\\\"usuario.controls.confirmPassword.errors?.required && (usuario.touched || usuario.dirty)\\\">* Required </ion-label> -->\\r\\n        <ion-label\\r\\n          color=\\\"danger\\\"\\r\\n          *ngIf=\\\"!passwordNotMatch && (usuario.dirty || usuario.touched)\\\"\\r\\n          >* Password and Confirm Password fields should match</ion-label\\r\\n        >\\r\\n\\r\\n        <ion-item>\\r\\n          <label>Phone: </label>\\r\\n          <ion-input type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <!-- <ion-label color=\\\"danger\\\" *ngIf=\\\"usuario.controls.phone.errors?.required && (usuario.touched || usuario.dirty)\\\">* Required </ion-label> -->\\r\\n        <ion-label\\r\\n          color=\\\"danger\\\"\\r\\n          *ngIf=\\\"usuario.controls.phone.errors?.pattern && (usuario.touched || usuario.dirty)\\\"\\r\\n          >* correct number phone</ion-label\\r\\n        >\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Birth: </ion-label>\\r\\n          <ion-datetime display-format=\\\"DD.MM.YYYY\\\" formControlName=\\\"birth\\\"></ion-datetime>\\r\\n        </ion-item>\\r\\n\\r\\n        <div class=\\\"center-class\\\">\\r\\n\\r\\n            <ion-button  \\r\\n                        type=\\\"submit\\\" \\r\\n                        [disabled]=\\\"!usuario.valid\\\"\\r\\n                        expand=\\\"block\\\"\\r\\n                        shape=\\\"round\\\"\\r\\n                        size=\\\"large\\\"\\r\\n                        routerLink=\\\"/log-in\\\"\\r\\n              >Create Account</ion-button>\\r\\n        </div>\\r\\n      </form>\\r\\n      <ion-card-subtitle class=\\\"ion-text-center\\\"\\r\\n        >All fields Required</ion-card-subtitle\\r\\n      >\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\\r\\n\";"],"sourceRoot":"webpack:///"}